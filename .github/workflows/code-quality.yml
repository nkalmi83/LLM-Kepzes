name: Code Quality and Review Setup

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, master]

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          cd 05_design
          pip install fastapi uvicorn sqlalchemy aiosqlite pydantic pydantic-settings python-dotenv
          pip install black isort flake8 pytest httpx

      - name: Run Black code formatter check
        run: |
          cd 05_design
          black --check --diff . || exit 0

      - name: Run isort import sorting check
        run: |
          cd 05_design
          isort --check-only --diff . || exit 0

      - name: Run Flake8 linter
        run: |
          cd 05_design
          flake8 --max-line-length=88 --extend-ignore=E203,W503 . || exit 0

      - name: Test FastAPI application
        run: |
          cd 05_design
          python -c "
          import sys
          sys.path.append('.')
          try:
              from main import app
              print('‚úÖ FastAPI app imports successfully')
          except Exception as e:
              print(f'‚ùå FastAPI app import failed: {e}')
          "

  enable-copilot:
    runs-on: ubuntu-latest
    name: Enable GitHub Copilot Features
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Add Copilot review prompt
        uses: actions/github-script@v7
        with:
          script: |
            const { context, github } = require('@actions/github');
            
            // Add a comment encouraging Copilot usage
            const comment = `## ü§ñ AI Code Review Available
            
            This pull request is ready for GitHub Copilot review! 
            
            **For reviewers using GitHub Copilot:**
            - Use Copilot Chat to analyze code changes
            - Ask Copilot for security vulnerability assessment
            - Request performance optimization suggestions
            - Get code quality improvement recommendations
            
            **Copilot prompts to try:**
            - \`/review\` - General code review
            - \`/security\` - Security analysis
            - \`/performance\` - Performance review
            - \`/explain\` - Code explanation
            
            The codebase follows FastAPI + SQLAlchemy patterns as documented in \`.github/copilot-instructions.md\`.
            `;
            
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Comment already exists or error occurred:', error.message);
            }